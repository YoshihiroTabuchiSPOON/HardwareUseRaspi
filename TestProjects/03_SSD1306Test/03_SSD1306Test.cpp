#include <unistd.h>
#include "../../SPI2C/SSD1306/SSD1306.h"

int main()
{
	SPI2C::CSPI2CManager i2cManager( "/dev/i2c-1" );

	pthread_t threadId;
	pthread_create( &threadId, NULL, SPI2C::CSPI2CManager::ThreadProc, (void*)&i2cManager );

	//が面クリア
	SPI2C::CSSD1306FillOrClear * pClear =
			new SPI2C::CSSD1306FillOrClear( false );
	i2cManager.AddDeviceAccess( pClear );

	//水平モード
	SPI2C::CSSD1306HorzModeSet * pHorzMode =
			new SPI2C::CSSD1306HorzModeSet(0x20, 0x20+0x3f, 0x00, 0x07);
	i2cManager.AddDeviceAccess( pHorzMode );

	const char * pcszBMPData [] = {
			 "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x50\x50\x50\x54\x54\x54\x54\x14\x00\x00\x00\x40\x40\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x40\x00\x00\x00\x00\x00\x00\x00\x40\x40\x50\x00"
			,"\x00\x00\x00\x00\x00\x00\x00\x54\x01\x00\x00\x00\x00\x00\x00\x04\x14\x50\x54\x05\x05\x05\x05\x15\x55\x54\x00\x00\x50\x14\x50\x00\x00\x00\x40\x00\x00\x55\x55\x55\x50\x00\x00\x00\x00\x00\x00\x50\x04\x01\x01\x00\x40\x54\x54\x54\x54\x55\x55\x55\x15\x05\x00\x00"
			,"\x00\x00\x00\x00\x00\x00\x00\x15\x54\x50\x40\x40\x00\x00\x00\x00\x00\x01\x15\x54\x40\x00\x00\x00\x55\x55\x00\x54\x01\x00\x05\x55\x40\x54\x01\x55\x40\x01\x55\x45\x15\x55\x50\x00\x00\x50\x15\x01\x00\x00\x40\x54\x05\x01\x41\x51\x15\x05\x01\x00\x00\x00\x00\x00"
			,"\x00\x00\x00\x00\x00\x50\x00\x00\x00\x01\x05\x05\x15\x15\x55\x54\x54\x50\x40\x01\x55\x40\x00\x40\x15\x05\x00\x55\x00\x00\x00\x55\x55\x05\x00\x01\x55\x00\x55\x55\x00\x05\x55\x40\x54\x15\x00\x00\x40\x14\x01\x50\x54\x05\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00"
			,"\x00\x00\x00\x00\x00\x00\x05\x50\x00\x10\x10\x10\x10\x10\x10\x10\x01\x05\x55\x50\x55\x55\x51\x00\x04\x04\x00\x55\x40\x00\x00\x55\x55\x50\x00\x00\x55\x00\x55\x55\x00\x00\x55\x55\x55\x00\x10\x05\x00\x54\x55\x41\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
			,"\x00\x10\x54\x54\x41\x41\x40\x00\x05\x05\x14\x10\x50\x50\x50\x50\x10\x14\x05\x00\x15\x55\x55\x10\x00\x00\x00\x05\x15\x54\x15\x05\x00\x15\x54\x15\x05\x00\x05\x15\x00\x00\x15\x15\x01\x00\x40\x40\x50\x54\x55\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
			,"\x00\x00\x00\x00\x01\x05\x05\x15\x15\x55\x54\x44\x44\x04\x04\x14\x14\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x14\x14\x14\x14\x14\x14\x04\x04\x04\x45\x45\x41\x11\x14\x05\x05\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
			,"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x05\x05\x04\x04\x04\x14\x14\x14\x14\x10\x10\x10\x10\x10\x14\x14\x14\x14\x04\x04\x04\x04\x04\x05\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"};

	for( int i=0; i<8; i++ )
	{
		SPI2C::CSSD1306OutputVRAM * pSPOON = new SPI2C::CSSD1306OutputVRAM();
		pSPOON->SetVRAMData( (const uint8_t*)pcszBMPData[i], (uint8_t)64 );
		i2cManager.AddDeviceAccess( pSPOON );
	}

	i2cManager.AddDeviceAccess( new SPI2C::CSSD1306Contrast( 0x00 ) );

	//ディスプレイON
	SPI2C::CSSD1306CommandOnly * pDisplayOn =
			new SPI2C::CSSD1306CommandOnly( SPI2C::CSSD1306CommandOnly::CommandDisplayOn );
	i2cManager.AddDeviceAccess( pDisplayOn );

	sleep(1);

	//コントラストをだんだん明るくする
	for( int i=0; i<256; i++ )
	{
		i2cManager.AddDeviceAccess( new SPI2C::CSSD1306Contrast( (uint8_t)i ) );
		usleep( 10 * 1000 );
	}
	sleep( 2 );

	i2cManager.AddDeviceAccess( new SPI2C::CSSD1306CommandOnly( SPI2C::CSSD1306CommandOnly::CommandDisplayOff ) );

	i2cManager.AddDeviceAccess( new SPI2C::CSSD1306Contrast( 0x7f ) );

	i2cManager.StopThread();

	pthread_join( threadId, NULL );

	return 0;
}
